function drawframe_rips2(f)
% set tablesize nxn (ts), number of pebbles (p), output frame (o), and timer
% matrix (tm)
ts=100;
p=3;
o=zeros(ts);
tm=o;

% randomize locations for initial pebbles (lcP)
rng(1);
lcP=[];
for i1=1:p
    nP=randi(ts^2);
    lcP=[lcP;nP];
end

% use starting image (im) instead of random pebble locations
% im=[];
% o(im)=2;

% set pebble locations in output to 2 and in timer to 1
o(lcP)=2;
tm(lcP)=1;

% loop to iterate through previous frames (1 -> f-1) to generate current frame (f)
for i1=1:f
    if f==1
        break;
    end

    % every nth iteration of frames drop another random pebble
    n=8;
    if mod(i1,n)==0
        nP=randi(ts^2,1);
        o(nP)=2;
        tm(nP)=1;
    end

    % pad output and timer with extra space for ripple overflow to be
    % trimmed later
    o=padarray(o,[2*f 2*f],0,'both');
    tm=padarray(tm,[2*f 2*f],0,'both');
    [rP,cP]=find(tm>0);

    % core loop for evaluating locations > 0 in timer matrix (value equates to how
    % many turns have lapsed since pebble dropped at this location) and drawing new ripples at
    % these locations while also erasing old ripples
    for i2=1:numel(rP)
        t=tm(rP(i2),cP(i2)); % timer value (t) at pebble drop location
        newRip=bullseyezeros2(t); % helper function creating bullesyed matrix with zero spacing where outer ring value is t
        s=4*t-3; % size (s) of newrip
        o(rP(i2)-floor(s/2):rP(i2)+floor(s/2),cP(i2)-floor(s/2):cP(i2)+floor(s/2))=o(rP(i2)-floor(s/2):rP(i2)+floor(s/2),cP(i2)-floor(s/2):cP(i2)+floor(s/2))+newrip;

        if t>1
            oldrip=bullseyezeros2(t-1);
            s=4*(t-1)-3;
            o(rP(i2)-floor(s/2):rP(i2)+floor(s/2),cP(i2)-floor(s/2):cP(i2)+floor(s/2))=o(rP(i2)-floor(s/2):rP(i2)+floor(s/2),cP(i2)-floor(s/2):cP(i2)+floor(s/2))-oldrip;
        end

        tm(rP(i2),cP(i2))=t+1;
    end
    o=o(2*f+1:end-2*f,2*f+1:end-2*f);
    tm=tm(2*f+1:end-2*f,2*f+1:end-2*f);
end
cmp=colormap(turbo(1+max(max(o))));
o=uint16(o);
o=imresize(o,[1000 1000],'box');
ind=o;
o=ind2rgb(o,cmp);
imshow(o)
end

